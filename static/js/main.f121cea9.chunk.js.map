{"version":3,"sources":["GenreBrowser.js","App.js","index.js"],"names":["GenreBrowser","useState","radioGenre","setRadioGenre","data","setData","useEffect","setupApi","then","a","api","RadioBrowserApi","fetch","bind","window","searchStations","language","tag","limit","stations","className","for","name","onChange","e","target","value","onSelect","map","genre","station","index","style","color","background","src","urlResolved","showJumpControls","layout","customProgressBarSection","customControlsSection","autoPlayAfterSrcChange","App","ReactDOM","render","document","getElementById"],"mappings":"yRA8FeA,EAvFM,WAAO,IAAD,EAEcC,mBAAS,OAFvB,mBAEhBC,EAFgB,KAEHC,EAFG,OAGCF,qBAHD,mBAGhBG,EAHgB,KAGVC,EAHU,KAKvBC,qBAAU,WACNC,EAASL,GAAYM,MAAK,SAAAJ,GACxBC,EAAQD,QAET,CAACF,IAEJ,IAAMK,EAAQ,uCAAG,WAAML,GAAN,iBAAAO,EAAA,6DACTC,EAAM,IAAIC,kBAAgBC,MAAMC,KAAKC,QAAS,gBADrC,SAGQJ,EACpBK,eAAe,CACdC,SAAU,UACVC,IAAKf,EACLgB,MAAO,KAERV,MAAK,SAAAJ,GACJ,OAAOA,KAVI,cAGTe,EAHS,yBAaRA,GAbQ,2CAAH,sDAkChB,OAEY,sBAAKC,UAAU,SAAf,UACI,sBAAKA,UAAU,aAAf,UACE,uBAAOC,IAAI,QAAQD,UAAU,QAA7B,6BACA,wBAAQE,KAAK,QAAQF,UAAU,kBAAkBG,SAAU,SAACC,GAAD,OAT5D,SAACA,GACdrB,EAAcqB,EAAEC,OAAOC,OAQyDC,CAASH,IAA3E,SAvBH,CACX,MACA,YACA,UACA,QACA,QACA,QACA,OACA,MACA,MACA,QACA,QAa0BI,KAAI,SAACC,GAAD,OACR,wBAAQT,UAAU,gBAAlB,SAAmCS,YAI7C,qBAAKT,UAAU,eAAf,SAEKhB,GACDA,EAAKwB,KAAI,SAACE,EAASC,GACf,OACA,sBAAKX,UAAU,UAAf,UACI,qBAAKA,UAAU,cAAcY,MAAO,CAACC,MAAM,SAA3C,SACGH,EAAQR,OAGX,qBAAKF,UAAU,cAAf,SACE,cAAC,IAAD,CACEY,MAAO,CACLE,WAAW,SAEbd,UAAU,SACVe,IAAKL,EAAQM,YACbC,kBAAkB,EAClBC,OAAO,UACPC,yBAA0B,CAAC,gBAC3BC,sBAAuB,CAAC,gBAAgB,mBACxCC,wBAAwB,QAhBFV,YCnD3CW,MAZf,WAEE,OACE,sBAAKtB,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,uDAEF,cAAC,EAAD,QCPNuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f121cea9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './GenreBrowser.css';\r\nimport { RadioBrowserApi, StationSearchType } from 'radio-browser-api';\r\nimport \"react-h5-audio-player/lib/styles.css\"\r\nimport AudioPlayer from \"react-h5-audio-player\"\r\n\r\n\r\nconst GenreBrowser = () => {\r\n\r\n    const [radioGenre , setRadioGenre] = useState(\"all\")\r\n    const [data, setData] = useState()\r\n\r\n    useEffect(() => {\r\n        setupApi(radioGenre).then(data => {\r\n          setData(data)\r\n        })\r\n      }, [radioGenre])\r\n      \r\n      const setupApi = async radioGenre => {\r\n        const api = new RadioBrowserApi(fetch.bind(window), \"My Radio App\")\r\n      \r\n        const stations = await api\r\n          .searchStations({\r\n            language: \"english\",\r\n            tag: radioGenre,\r\n            limit: 12,\r\n          })\r\n          .then(data => {\r\n            return data\r\n          })\r\n      \r\n        return stations\r\n      }\r\n\r\n    const genres = [\r\n        \"All\",\r\n        \"classical\",\r\n        \"country\",\r\n        \"dance\",\r\n        \"disco\",\r\n        \"house\",\r\n        \"jazz\",\r\n        \"pop\",\r\n        \"rap\",\r\n        \"retro\",\r\n        \"rock\",\r\n      ]\r\n     \r\n    const onSelect = (e) => {\r\n        setRadioGenre(e.target.value)\r\n    }  \r\n\r\n    return (\r\n        \r\n                <div className=\"genres\">\r\n                    <div className=\"genre-wrap\">\r\n                      <label for=\"genre\" className=\"genre\">Genre :&nbsp;&nbsp;</label>\r\n                      <select name=\"genre\" className=\"genre decorated\" onChange={(e) => onSelect(e)}>\r\n                          {genres.map((genre) => (\r\n                              <option className=\"genre options\">{genre}</option>\r\n                          ))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"station-wrap\">\r\n\r\n                        {data &&\r\n                        data.map((station, index) => {\r\n                            return (\r\n                            <div className=\"station\" key={index}>\r\n                                <div className=\"stationName\" style={{color:\"black\"}}>\r\n                                  {station.name}\r\n                                </div>\r\n                                \r\n                                <div className=\"player-wrap\">\r\n                                  <AudioPlayer\r\n                                    style={{\r\n                                      background:\"black\"\r\n                                    }}\r\n                                    className=\"player\"\r\n                                    src={station.urlResolved}\r\n                                    showJumpControls={false}\r\n                                    layout=\"stacked\"\r\n                                    customProgressBarSection={[\"PROGRESS_BAR\"]}\r\n                                    customControlsSection={[\"MAIN_CONTROLS\",\"VOLUME_CONTROLS\"]}\r\n                                    autoPlayAfterSrcChange={false}\r\n                                    />\r\n                                </div>\r\n                            </div>)})}\r\n                    </div>\r\n                  </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default GenreBrowser\r\n","import React from 'react';\nimport './App.css';\nimport GenreBrowser from './GenreBrowser.js'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <nav className=\"nav\">\n        <h1>International radio</h1>\n      </nav>\n      <GenreBrowser />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}